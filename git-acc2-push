as title
再一次～再一次～
再一次～再一次～
刪除 .gitconfig-2 清空 GIT_SSH_COMMAND 皆無影響
更改~/.ssh/config 中的 hostname為 github.com
git push -u test-hub master || 正常
git push -u test master || 正常
git push -u test-hs2 master || 正常

將 [remote "test-hs2"] url主機 自github.com-2 改為 github.com
git push -u test-hs2 master || 失敗
git push -u test-hub master || 正常
git push -u test master || 正常

可使用 $ ssh -T -p 443 git@ssh.github.com -i ~/.ssh/id_rsa-2; 對第二金鑰進行驗證 

將 .git/config 的主機位置　與 ~/.ssh/config 的Host 欄位皆改成s2457328
git push -u test-hub master || 正常
git push -u test master || 正常
git push -u test-hs2 master || 正常

得到結論：
1. .git/config 對於[remote "xyz"] url 的設定, 會使得實際 ssh 使用上會先去讀‵有相同HOST‵的設定區塊
2. 不必大費周章,特定為不同的專案,設定使用不同的 user mail 的 config
   不過設定一下亦是無礙
3. git 確實可多帳號同主機

猜測：
1. 不必兩個金鑰都加入
   因為 ssh 會去讀config 指定HOST的區塊
   那裡就有規定它應該去使用哪個金鑰

2. 其實 github 不需要特別為此驗證
   因為它驗證時,使用的主機是
   ssh.github.com
   但是push時,使用的主機是
   github.com
   雖然用 ssh.github.com 也可以 push 成功

實驗：
1. 清空 ssh-add 中所有的 ssh-key
2. 新增 ssh-key
3. 將新增的公鑰綁定到s2457328 的 github web page 中
4. 新增一組 ssh-config 設定 指定 新的 host 為 git.again ;並指定剛剛新增的私鑰為其驗證用私鑰
5. 註解所有舊的ssh-config
6. 將 REPO/.git/config 的 [remote "test-hs2"] url 的 host 改為 git.again

實驗結果：
1. ssh-add 確實是非必要步驟,連線後會自動加入清單
   可使ssh連線都有獨立config
2. 不能跳過驗證的步驟,否則將推送失敗

猜測-作者變更：
懷疑是commit時, [branch "master"] remote = x 的值所導致

實驗2：確立作者
1. 剛剛打"實驗結果"的值 = test-hub
2. git add . => 是 test-hub
3. commit 前 改變為 test-hs2
4. git ci => test-hs2

實驗失敗 證實猜測錯誤


猜測2-作者變更：
那我猜應該就是`user.name``user.mail`了
但是,是哪個捏？

實驗3: 我猜是mail 因為git帳號是認mail的
1. 增加一個`~/.gitconfig-2`的檔案 將`[user] mail`設定為另一組
2. 在`~/.gitconfig`加入引用`~/.gitconfig-2`的區塊

好吧 剛剛的不是,那我增加一個步驟
剛剛是再編輯完這份文件之後,才加入config檔案的變更
所以現在我就直接變更這檔案試試看

仍然不是

修正：我發現剛剛引入的path與我預期的符號不相符
修正該符號

仍然不是
3. 加入 [user] name 的變更

仍然不是

4. 將引入的次序拉到最前面

仍然不是

5. 在專案的`.git/config`引入該設定
並且放在最上面

仍然不是

6. 直接使用 git config user.* 登錄 name mail

仍然不是

那之前作者的變更,到底是如何做出來的呢?

push no ~/.gitconfig link
618a3936745991e285f9dc69fd6e17e4450dae9c

再一次～再一次～
3f4f41b2ba26b9acbef17cb0d464de34d9586a18

難道是終端機？
所以我重開終端機了

仍然不是
